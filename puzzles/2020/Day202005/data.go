package Day202005

var Entry dayEntry

type dayEntry bool

func (td dayEntry) Describe() (int, int, string, int) {
	return 2020, 05, "Binary Boarding"
}

func (td dayEntry) PuzzleInput() string {
	return `BFFFFFFRLL
FFBFBBBRLL
FBBFBFBRLR
BBFBBBBLLL
BBFBBBBLLR
BBBFBBBLLR
FFBBBFBRLR
BBFBFBFLRL
FBBFFBBLRL
BBBFBBFRRL
BBFBBFFRRL
BFBBFBFLRL
BBFFFBBRLL
FBFFFBBLLR
FBFBFBFLRR
FBBFBFFRLL
FFBBFFFRRR
BFBFBFBRLL
FBBFFBBRLL
BBBFFBBRLL
BFBFFFFLLR
FBBBBFBRRR
BBFBBFFLRR
BFFBFBFRRR
FBFBBBBRLR
BFBFBFFRLL
BFFFFFBRLL
FBBBFBFLLR
BFFBFBBRRR
BFFBBFBLLR
FBBBFFBLLL
BFFFBFBLRR
FFFFBFFLRR
BBFFFBFLLR
FBFBFFFLLR
FBFFFFFLLL
FFFFFFBRLL
BFFBFBBLRR
BFBFFBBLRR
BFFBFFBRLR
FFBFBBBLLR
FBFFFBFRRR
BFBFBFFRLR
BBBBFFBRRR
FBBFBBBLLL
FBBBBFBLRR
BFBBFFFRRL
FBBBBBBLRL
FBBFFFFLLL
FFBBBFFLLR
FBBBBBBRRR
BBBBFFBRLR
BBBFBFBLRL
FFBFFBFLLL
FBBBBBFLLL
FFBBBBBRLR
FBBFFFFLRL
BBFBBFBLLR
FFFBBFFRLR
FFFBBBFLLL
BFFFFFFLRL
BFFFBFFLRL
FBBFFFFRLR
FBFFFBBLLL
FFFFFBFRLR
BBBBFBFLLL
FBFBFFBLLR
FFBFBFBRLR
FBBBFBBLLR
FFBBBBFRLR
FBBBFBBRLL
FFFBFBFLLL
FFFFFBFRRL
FFFBFFBLRR
BFBFBBFRLL
BFBFFFBLLL
FFFBFBFRLL
FBFBBBFRLL
FFFBFBFLLR
BFBBFBFRRL
BBFFBFFRLR
FFFBBFFRLL
BBBBFFFLRL
BFFBFBBLLL
BBFFFFFLRL
BBFFBBBRLL
FFBFFFFLRR
FFBBFFFRLR
BBFFBBBRLR
FBFBFFBRRL
FFFFBBBLRL
BBFBFFFRRL
BFBBBFBRRL
FFBFBFBLRR
BBBFBFFRLR
BFBBBBBRRL
FBFFFFFLRR
BFFFFFBLRR
FFBBBFBLLL
FBBBFFFLRL
BBFFBBFRRL
FBFFFFBRRR
BFBFBBBRRL
BBFFBBBLRL
FBBFBFBRLL
FBFBBBFLLL
FFFFBBBLRR
FBBFBBFLLR
FBFFBBFLRL
FFBBFBFRRR
BFFBBBFLRL
FFFBBBFRRL
FFBBBFFLRL
BFBBFFBRLL
BFFBFFFLLL
FBFFFFBLRR
BFBFFBFLRL
FBBFFBFLLR
FBBFBBBRRL
BBFBFFFLLL
FBBBBFFLRR
FBBBFBBRRR
FFFBFFFLLR
BBFFBBFLRL
FFFFBFFRLL
BFBBBFFRRR
BFFFFBFRRL
BBFFBBBLLR
BFBBBBFRRR
BFBBBFFLLL
BBFBFFFLRL
BBBFFFBRRL
BBBBFFBRLL
FBFFFFFLRL
BFFFBBFLLR
FFFFBBFRRL
BBFFBFBLLR
BFFBBFFRRL
BBBFFBBLLL
BFFBFBFLLL
BFBFBFBRRL
BBFFFFBRRL
FBBBFBFRRR
FFBFBBFRLR
FFFBBBBLRR
FFBBFBBRRL
BBFBBFBRLL
FFBBBBBRLL
BFBBBBFLRR
FBFBBFBLLL
FBBFFFFRLL
BFFBFFFLRL
BBBFBBFLLL
BFBFBBBRRR
FBFBBFFLRL
FBBBFFFLLR
FBBBFFBLLR
BBFFBBFRLL
FBBFFBFLRL
BFFBBBFRRR
BFBBBBBRLL
FFBBBBFRLL
BBBFFFFLLL
BBFBFFBRRR
FBBBBFFLLL
BBBFFFFRRR
FBBFBFBLLL
BBBFBBFLRR
FFBFFBBRLL
FFBBFBFLLL
FBFFFFFRLL
FBFBFFBLRR
BBFFBBBRRL
BFFBBBFRRL
FFBBBFBRLL
FBBBBFBRRL
BBFBBBBRLR
BFFBFFBRRL
BBFBFBBRRL
FFFBFBFRLR
FFBBFBFRLR
FFFBBFBRLL
BFFFFBBRLL
FBFBBFBLLR
FBFFBBFLLL
BBFBFBBRLR
BBFBFBBLLL
FBBBFBBRRL
BFFFBBBRLR
BBFFBBBRRR
BFFBFFBLRL
BBFBFFBLLR
FFFFFFBRRL
BFBFBFFLLR
BBBBFFBLLL
FBBBFBFRRL
FBBFFBFLLL
FFBFBFFRLL
BFBBFFFLLL
FBFFFBBLRL
FFFBFFBLRL
BFFFBBBLRR
BBBFFBFRRL
FBBBFFFRLR
FFBBFFBRRR
FBBBBBBLLL
BFFBBFFLLR
FFFFFBBLLR
FBBFBFBRRR
BBBFBFFLLL
FFFFBBFRRR
FBFFFFBRLL
FFBBFFFLRR
FFFFFBBLRL
BBBBFFFLLL
FFFFBFBLLR
BBBBFFFRRR
FBBFBBFRRR
BFFBFFFRLR
FBFFBBFLRR
BFBBFBBRLR
BFFBBBFLLL
BFBFBBBLLL
BBFBBBFRRL
FBBFBBFRRL
FFFBFFFLRL
FBFFBFBLRR
FFBFFFFRLL
FFFFBBFLRR
BFBFFBFLRR
FBBFBBBRLR
BFBBBFFLRL
BBFBFBFRLR
FFFFFBBRRL
BBFFBFFLRR
FBBBFFBRLR
BBBFFBBRRL
FFFFFBBRLR
FFFBBFFRRL
FFBFFFFRLR
BFFBFBBLLR
BFBFBFFLLL
FFBFBBBLRL
BBFBBBBLRR
BFFFFFBRLR
BBFBFBBLLR
FBBBBFBRLL
BBFFBFBLRR
BBFBFBBRRR
BBBFBBBLLL
FBFBBBBRLL
BFFBFBBRLL
BFBBBBBRLR
BBFFFFBRLL
FBFBBBBRRR
FBBFFFBRRL
BFFBBFFLLL
BBFBBFBLRL
FBBFBBBLRR
FBBFBBFLLL
FFFFBBFLRL
BFFFBBBRLL
FFFBBBFLRL
BFFFBBFRLR
FFFFBBBLLR
FFFFBFFRLR
FFFFBBBRRR
BFBFBFBRRR
BBFFBBFRRR
FBBFBFFLLR
BFBBBFBRLL
BFBFFFFRLR
BFBFFFBLLR
BFBBBFBRRR
BFFBBBFRLL
FBFFBBFRLR
FBFBBFFLLL
FBFBFFFRLR
FFFBFBBLRR
FFBBBFFRRL
BBFBFFBLRL
FBBBBBFRLR
BBBFBFBLLR
FFFBBFFLRL
BFFBBFFLRR
BBFBFFFLRR
FFBFFFBRRR
BFFBBFBLRL
FFBBFFBRLL
BFBFFBFRLL
FFBFBFFRLR
FBFFFBFRLR
BFBBFBFRLL
BFFBFBFRRL
FFBBFFBRRL
FBFFFFBLLL
BFFFBBBLLL
FBBFBFFRRL
BFBFBBBRLL
FFFBFFFLLL
BFFFBFFRRL
FBBBBBFRLL
FFBFBBFRRR
FBFBFFFLLL
FFFBFBBRRR
BFBBFFFLRR
FFFFFBFLRR
FBFBFFBRLR
FBFFBBFLLR
BBBFFFBLLR
FBFFFBBRLL
BFFBFBBLRL
FFFFFFBRRR
FFBFBFBRLL
BBFBBFFLLR
BBBFFFFRLR
BFBFBFBLRL
FBFFBFBRLR
FBBFFFBRRR
BBFFFFFLRR
BFBFBFBLRR
BFBBBBBLLR
FFBFFBFRRR
FFFFBBBRLL
FBBBBBFLRR
FFBBFBFRLL
FBFBBFFLRR
FFBFBBBLLL
FBFFBFFRRL
BBBFFBBLRR
BFFFFFFRRL
FBFFBFFRLL
FBBBBFBRLR
FBBBFBFLRL
FBBBFFBLRL
FFBBFBBLLR
BBFFFBBRLR
BBBBFFBLLR
BFFFFBFLRR
BBFFBFFRLL
FFBFBFFRRR
BFFFFFFRLR
FFFFBFFLRL
BFBBFFFRLR
BBFFBFFLLL
FFFFFBFRRR
FFFBFBBLRL
BFFBBBBRRL
FBFBBFFLLR
FFFBBFFLLL
FFFFBFBLRL
BBFBFBBLRR
BBFFBFFLRL
BBBFFFBLRL
BFFBFBFRLL
FFFBFFFLRR
FBFFFBBRLR
BFFFBBFRRR
FBBBBBFLRL
BFFFBBBLLR
BFFFBBFLRL
BFFFFBFLLR
FBFFFBBLRR
FBBFFFBRLR
BBFFBFBLRL
BBFBFBFLLR
FBBBFBFRLR
FBFFFBFRRL
BFFFBFFLRR
FFFFBFBLRR
FBFFBFFLLL
FFBFFBBRLR
BBFBBBFLLL
FBFFBFBRRL
BFFBFFBRLL
BFBFFFFLRR
FFBFBBBRLR
BFFBFBBRRL
FBFBBBBLRR
BFFFFFBLLL
FBFFBFBRRR
FBFBBFFRLR
BFBFBBFLLL
BFBBBFFRRL
FFBBBFBLLR
FBBFFFBLRL
BFFFFFFLLR
FBFFFFBLRL
FFBBFFFLRL
FFBBBFBLRL
BFFFBFBLLR
BFFBBBFLRR
FBFFFBBRRR
FFBFFFBRLL
FBFBFBBLLR
BFBBBBFRLL
FBBBBFFRLL
BFBFFBFRRL
FBBBBFFRLR
FFBFFFFRRR
BFFFBBFLRR
BBFBFBFRLL
BFFBFFBRRR
FFFFFBFLLL
BFBFFFBRRL
BFFBBFBRRL
BFBBFFBRRL
FFFBBBBRLR
FFFBBBBLRL
BFBBBFFLLR
BFBFFFFRRR
BBBFBFFRRR
FFFBFFFRRR
FFFBFBBLLR
BBBFBFFRRL
BBFFBFFLLR
FFFBBFFLLR
FFFBFBBLLL
FBFBFBFLRL
FFFFFBBLLL
FBBBBBBRLR
FFBBFBFLRL
BFFFFBBRLR
BFFFBFBLLL
BBFBBBFRRR
FBBBFFBRRL
FFBFFBFLRL
FFBFFFFLRL
BBFFFFBLLL
BFBBFBBRLL
FFFFBFFRRR
BFFBFBBRLR
BFFBFBFLRR
BFFBBFBRLL
FBBBFBBLRR
FBFBFFFRLL
BFBFFFBRLL
FBBBBBFRRL
FBFBFBBRLL
FBBFFBBRRR
BFFFBBFRRL
BBFFFFFRRR
BFFBFBFLRL
BBBFFBBLRL
FFBFBBFLRR
BBFFFBFRLR
FBFBBBFRRR
BBFBBBBRLL
FBFFBFFRLR
BFBBBFFRLR
FBFFBBBLRR
BFBFFBFRRR
FFBFFBFRRL
FFBBBBBLLL
BBFBBBFRLL
BFBBFBBLLL
BFBBBFBLRL
FBBBFBFLLL
FBBFBFFLRL
FBFBFBFLLL
BBFFBBFRLR
FBFBBBFLRL
BBFBBFBLRR
FFFFBFFLLL
FFFBBBBRRL
BBBFBBBRLL
BBFFFFFLLR
FBBFFBBRLR
FBBFBBFRLR
BFFFBFBLRL
BFFFFBBRRR
FBFFFFFLLR
FBBFBBFLRL
BBFFFBFRRR
BBBFFBFLLR
BFFBBFBRLR
BBFBFFFRLL
FFFBBFBLRR
BBBFBFFLLR
FBFFBFBLRL
FBBFBFFLRR
FBBBFFFLRR
FBBFBBBRRR
BBFFFBFRLL
FFBFBBFLRL
FBBFFFBLLR
BFFFFBFRRR
BBFBBFFRLL
FFBFBBBLRR
BFBFFFBLRL
FBBFFBFRRL
FFFFBBBRRL
FFFBBFBRRR
FFFBBBFRLL
BBFFBBFLLR
FFBFBFFRRL
BFBFFFBRLR
FFBBBFFRLL
FFFFBBFLLL
BFFFFFBLLR
FBBFFFFRRR
FFFFFFBLRL
BBFBFFFLLR
BBBFBFFLRL
BBBFFFFRLL
BBFFFFBRLR
FBFBBFFRRL
FFFFFBFLLR
BFFFBFBRLR
BFFFFFFRRR
FBFBFBBRLR
BBBBFFFRLR
FBBFBFBLRL
BBFFBFFRRR
BFFBBBBRLR
BBBBFFBLRR
BFBBFBBRRL
BFFFFBBLLL
BFFFBFBRLL
FBBFFFFLLR
BFBBFFFRLL
BBFBBBFRLR
FBFBFBFRRR
BFBFBFFLRR
BBFBBBBRRL
BFFFBFFRLR
BBBFBFBLLL
FBFBFFFRRL
FBBBFFFRLL
FBFBBFBRRR
FBFFFFFRRR
FBBBBBBRRL
BBBBFFFLLR
BFFFBFFLLR
BFBBFBBLRL
BBBFFFBRLR
FFFBBFBLRL
BFBFBFFRRR
BBFFFBBLLR
FBFBBFFRLL
FFFBBBFRLR
BFFFFBFRLL
FFBBFBBRLL
FFFBFFBRRL
BBBBFFFRLL
FBFFBBBRLL
FFBFBFFLLL
BBBFBBFLRL
FBFBBFBLRL
FFBFBFFLRR
FFFBFFBLLR
FBBFBFFRRR
FFBFBFBLLR
FFFFFFBLLR
BBBFFFFLRR
BBFBBFFRLR
FFFFBBBLLL
FBBFFFBLRR
BFFFFBFLLL
BFBBBFBLRR
FBFFFBFLLR
FBFBBFBRRL
BFBFBBFRRR
FBFBFFFLRR
FFBFFBFLLR
FBFBFBFRRL
FFFBBBFLRR
FFFBBBBLLR
BBBFBBFRRR
BFFBBBBLRR
BBBFFBFLRR
FFBBBFFRRR
FBFFBFFRRR
BFFFFBBLRR
BFFBFFFRLL
BFFBFFBLRR
FBBBFBBRLR
BFBFFBBRLR
FBFFBBFRRR
FFBBBFFRLR
BBFFFFFRRL
BFFBBBBLRL
FBBFFFFLRR
FFBFBBFLLL
BFFFBBBRRR
BBFFFFBLRR
FFFFBFBLLL
FBFFBFFLRR
BFBFBFFLRL
BBFFFFFRLR
BBBFFBBRLR
BBFFBFBRRR
FBFFBBBLLR
BBFBFBFRRR
BFBBFBFRRR
BFFFBBBLRL
BFBBFBBLRR
BBBFBBBRRR
FFFBBFBRRL
FFBFFFBRRL
FFBFBFBLRL
BFFFFFBRRR
BFBFBBBLLR
BFFFBFFRRR
FBFBFFFLRL
BFBBBBBRRR
FFFBFBFLRL
FFFFBFFRRL
FBFBFBBLLL
FFFFBBBRLR
FBBFBBBLRL
BFBBFBBRRR
FFFBFBFLRR
BBBBFFBRRL
FFBBFBFLLR
FFFBFBBRLR
BBFFFBFLRL
FFBBBFBRRL
FFBFBBBRRR
BFBBBBFLLR
BBFBBBFLRL
BFBBFBBLLR
BBFFFBBLRR
FFBBFFBLRL
BBBFFFFRRL
BFFFBFFRLL
BBBBFFFLRR
FFBBBBFLRR
FBBFFBFLRR
BBBFFFFLLR
BFFBFFFRRL
FBFBFBBLRL
BFBFFBFLLR
BFFBFBFLLR
BFBFFFBRRR
FFBBFFFRRL
BBFBBFBLLL
FBBBFBFRLL
BBFBBBFLRR
BBBFFFBLRR
BBFFFFBLLR
FBBFBFFRLR
FBFBFFBLLL
BFFBBBFRLR
BFFFFBBRRL
BBBFFBFLLL
FFFBFBFRRR
FBFFBFFLRL
FFBBBBBLLR
BFFBBFBRRR
FBBBBFBLRL
BFBFBBBRLR
BBFBBFFLLL
BFFFFFBLRL
FBBFBFBRRL
FBBBFFFLLL
BFFFBFBRRR
FFBFBFFLRL
FFBFBFBRRL
FFBBBBBRRR
FFFFBFBRLR
BFBBFFBLLL
BFFBBBFLLR
FBBBFFBRLL
FBFFBBBLRL
BFFBBBBRRR
FFBFFBBRRL
BFBFFBBRLL
FFFFFBFLRL
FFBBBBFRRR
FFBFFFFLLR
BBBFBBBRRL
FFFFFBBRLL
FBFBBBBRRL
FBBBFBFLRR
FFFBBFFLRR
FBFFFBFLRL
FFBFFBFRLL
FFFBFFFRRL
FFFFBFBRLL
BBFBFBBRLL
FFBBBBFLLR
FBFFFBBRRL
BFBBBBBLLL
BFBFFBBLLL
FFFFBFBRRL
FFBBFFBLRR
BFBBFFFRRR
FFBFFBFRLR
BBFBBBBLRL
FBBFBBBLLR
BFFFBBFLLL
FFFFBFFLLR
BFFFFBFRLR
FBBFBFBLRR
BBBFFFFLRL
BBFFFBBLRL
BBFBFFBRLL
FBBBBFBLLR
FBFFBBFRLL
BBFFBFBLLL
FBBFFFBRLL
BBBFBFBRRL
FBFBBFBRLR
BFBBBBFLLL
FBFBFBFRLL
FBFBBBFLLR
BBFBFBFLLL
BBFFFBFLLL
BBBFFFBLLL
BFBBBFBLLL
FFBBBFFLLL
FFBFFFFRRL
FBBBBBFLLR
FBBFFBBLRR
BBFFFFFRLL
FFFFFBBLRR
BFBBFFBLRL
BFFFFFBRRL
BFBBFFFLLR
FFFBFBBRRL
FFBFFBBLRL
BFFFFBBLRL
FBFBBBBLRL
FBBBFFBRRR
FFBBFBBRLR
BFBBFFBLRR
FBBBFFBLRR
FBFBFFBRLL
FBFBFBFLLR
BBFFFBBRRL
BBBFBFBRLL
BBFBBFFRRR
BFBBFFFLRL
BFBFBFFRRL
BBFBBFFLRL
BBFBFBFLRR
BBFBFFFRRR
BBBFFBFRLR
BFFBBFFLRL
FBBBBBBRLL
BBFFFBBLLL
FFFBBBBLLL
BBFFFFBLRL
FFBBFFBRLR
BFBBBBBLRR
BBFBBFBRRR
FFFFFFBRLR
FFFFBBFRLL
FFFFBBFRLR
FBFBBFFRRR
FFFFBFBRRR
FBFBFBBRRR
FFFFFBBRRR
BFBBBBBLRL
BBBFBBFLLR
BFBFFBBRRL
BBBFFFBRLL
BBFBBBBRRR
FBFBBBFRRL
BFBBFBFLLL
FFFBBFBLLL
BBFFBFBRRL
FFBFFBBLLR
FFBFBBFLLR
BBBFBBFRLL
FBBFFFFRRL
FBBFFBFRRR
BFFBFFBLLL
FBFBFFBLRL
BBBFBBFRLR
FFBFBBBRRL
FFBBBBFLLL
FBFBBBFLRR
FFBBFBFLRR
FBFFBBFRRL
FFBBFFFLLR
FBFBFBBLRR
BBBFBBBRLR
BFFBFFFLLR
BFFFBFBRRL
FFBBBFBRRR
BFFBFFFRRR
BBBFBFFLRR
FFFFFFBLRR
BFBFBBFRRL
FBFBBFBRLL
FBBBBFFLLR
BFBBBBFLRL
FBBBBFBLLL
FFBBFFBLLR
BBBFFBBRRR
BFBFFFFRRL
FFBFFBBRRR
BFFBBFFRRR
FBFFBFFLLR
BBFFFFFLLL
BBBBFFBLRL
BFBBBBFRRL
FBBFBFFLLL
FFFFFBFRLL
FBBBBBFRRR
BBBFBFFRLL
BFBBBFFRLL
FFBBBFFLRR
BBFFFBFLRR
BBFFFBFRRL
BBFBFFBRLR
FFBFFFBLRR
FBFBFBBRRL
FFFBBFFRRR
FBBBBBBLLR
FBBFFBBLLL
FBBBBFFRRL
BFBFFFFLRL
BFBBBFBLLR
FFFBFFBRLL
FBFBBFBLRR
FFBBFBBLRR
BBBFBBBLRR
BBFBBBFLLR
BFBFBBBLRR
BFBFBBFLRL
FFFBBBBRRR
BFBFFBBRRR
FBBBBFFRRR
FFFBBFBRLR
FBFFFBFRLL
BFBFFBBLRL
FFBFBBFRRL
BFFFFFFLLL
BFBFFFFLLL
BBFFBFFRRL
BFFBBFFRLR
FFFBFFBLLL
BBFBFFBLLL
FBFFBBBRLR
FBBBBFFLRL
FBFFBBBRRR
BFFBBFBLLL
BFBFBFBLLR
FBFFFFBRLR
BBFFFBBRRR
BFBBFFBLLR
FFFBFBBRLL
BBFFFFBRRR
BFFBBFBLRR
FBFBFBFRLR
FBFFFBFLRR
FFBBBBBRRL
FBFFBBBRRL
BBBFFFBRRR
FBFFFFBLLR
BBFBFBFRRL
BBFBFFFRLR
BFFFFBFLRL
BBBBFFFRRL
FBBFBBFRLL
BFBFBFBLLL
FBBBBBBLRR
FFBBBBBLRR
BFFBBFFRLL
FFFFBBFLLR
FFBBFFBLLL
FFBFBBFRLL
BBBFBFBRRR
BFBBFBFRLR
FFBBFFFRLL
FBFFFBFLLL
FFBFFBBLRR
BFBFBBFLRR
FBBFFBFRLR
BBBFBFBLRR
BBFFBBBLLL
FFFBBBFRRR
BFFBBBBLLL
FFFBBFBLLR
BFBBBBFRLR
FBFFBFBRLL
FFBFFBFLRR
FFFBFFBRLR
BFBFFBFRLR
BFBBBFFLRR
BFBBFBFLLR
BBFBBFBRRL
FBFBFFBRRR
BFBBFFBRRR
BBFBFFBLRR
FBFFFFBRRL
FFFBBBBRLL
FFBBFFFLLL
BFBFBBFLLR
FBBBFBBLLL
BBFFBBFLRR
FBFFFFFRRL
BFBFFBBLLR
FBBFFBBLLR
BBBFBFBRLR
BFFFFFFLRR
BBFFBFBRLR
FBBFFBBRRL
BFFFFBBLLR
BBFBBFBRLR
FFBBBBFRRL
BFFBBBBLLR
FFBBFBBLRL
BFBFFFFRLL
BFFFBBFRLL
BFBFBBFRLR
BBFFBBFLLL
FFBBBFBLRR
FBFFBBBLLL
FFBFFFBLLL
FBBFFFBLLL
FFBBBBBLRL
FBBFFBFRLL
FFFBBBFLLR
BBBFBBBLRL
BFFBFFBLLR
BFBFBBBLRL
FFBFFFBRLR
BBBFFBFRRR
BFFBFBFRLR
FFBBBBFLRL
FBBFBBFLRR
FBBBFFFRRR
FBFBFFFRRR
FFFBFFFRLR
BFBBFBFLRR
FFBFFBBLLL
FFBFFFFLLL
FBFFBFBLLL
BFBFFFBLRR
FBFFFFFRLR
BBFBFBBLRL
FFBFBFBRRR
FFBFFFBLRL
FFBBFBBRRR
BBFFBFBRLL
FFFBFBFRRL
FFBFFFBLLR
FFFBFFFRLL
FFBFBFBLLL
FFFBFFBRRR
BBBFFBFRLL
FFBFBFFLLR
BBBFFBFLRL
FBFBBBBLLR
FBBFBFBLLR
FFBBFBBLLL
BFFBFFFLRR
BBFFBBBLRR
FBBFBBBRLL
FBFBBBFRLR
BFFFBBBRRL
BFBBFFBRLR
FBBBFFFRRL
BFBFFBFLLL
FBBBFBBLRL
FBFBBBBLLL
FBFFBFBLLR
FFBBFBFRRL
BFFBBBBRLL
BBBFFBBLLR
BBFBFFBRRL
FFFFFFBLLL
BFBBBFBRLR
BFFFBFFLLL`
}

func (td dayEntry) PuzzleSpec() string {
	return `--- Day 5: Binary Boarding ---
You board your plane only to discover a new problem: you dropped your boarding pass! You aren't sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.

You write a quick program to use your phone's camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.

Instead of zones or groups, this airline uses binary space partitioning to seat people. A seat might be specified like FBFBBFFRLR, where F means "front", B means "back", L means "left", and R means "right".

The first 7 characters will either be F or B; these specify exactly one of the 128 rows on the plane (numbered 0 through 127). Each letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the front (0 through 63) or the back (64 through 127). The next letter indicates which half of that region the seat is in, and so on until you're left with exactly one row.

For example, consider just the first seven characters of FBFBBFFRLR:

Start by considering the whole range, rows 0 through 127.
F means to take the lower half, keeping rows 0 through 63.
B means to take the upper half, keeping rows 32 through 63.
F means to take the lower half, keeping rows 32 through 47.
B means to take the upper half, keeping rows 40 through 47.
B keeps rows 44 through 47.
F keeps rows 44 through 45.
The final F keeps the lower of the two, row 44.
The last three characters will be either L or R; these specify exactly one of the 8 columns of seats on the plane (numbered 0 through 7). The same process as above proceeds again, this time with only three steps. L means to keep the lower half, while R means to keep the upper half.

For example, consider just the last 3 characters of FBFBBFFRLR:

Start by considering the whole range, columns 0 through 7.
R means to take the upper half, keeping columns 4 through 7.
L means to take the lower half, keeping columns 4 through 5.
The final R keeps the upper of the two, column 5.
So, decoding FBFBBFFRLR reveals that it is the seat at row 44, column 5.

Every seat also has a unique seat ID: multiply the row by 8, then add the column. In this example, the seat has ID 44 * 8 + 5 = 357.

Here are some other boarding passes:

BFFFBBFRRR: row 70, column 7, seat ID 567.
FFFBBBFRRR: row 14, column 7, seat ID 119.
BBFFBBFRLL: row 102, column 4, seat ID 820.
As a sanity check, look through your list of boarding passes. What is the highest seat ID on a boarding pass?

--- Part Two ---
Ding! The "fasten seat belt" signs have turned on. Time to find your seat.

It's a completely full flight, so your seat should be the only missing boarding pass in your list. However, there's a catch: some of the seats at the very front and back of the plane don't exist on this aircraft, so they'll be missing from your list as well.

Your seat wasn't at the very front or back, though; the seats with IDs +1 and -1 from yours will be in your list.

What is the ID of your seat?`
}
